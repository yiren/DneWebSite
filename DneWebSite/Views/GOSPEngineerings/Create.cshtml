@model DneWebSite.Models.DneGOSP.GOSPEngineering

@{
    ViewBag.Title = "新增";
    Layout = "~/Views/Shared/_DataLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="text-center">GOSP工程及設計功能領域績效指標</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentSeason, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.CurrentSeason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentSeason, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (var i = 0; i < Model.GOSPScores.Count; i++)
        {
            <div class="form-group">
                <div class="col-md-4">
                    @Html.HiddenFor(model => Model.GOSPScores[i].Plant) 
                    <h4 class="pull-right">@Model.GOSPScores[i].Plant</h4>
                </div>
                
            </div>
            
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].DcrReviewScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].DcrReviewScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].DcrReviewScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].DcrDefectScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].DcrDefectScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].DcrDefectScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].DcrCloseScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].DcrCloseScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].DcrCloseScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].EvaPerformanceScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].EvaPerformanceScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].EvaPerformanceScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].FcrScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].FcrScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].FcrScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].BacklogScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].BacklogScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].BacklogScore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => Model.GOSPScores[i].CAPScore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => Model.GOSPScores[i].CAPScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model.GOSPScores[i].CAPScore, "", new { @class = "text-danger" })
                </div>
            </div>

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="新增本季績效" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
